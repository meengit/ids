{"version":3,"sources":["node_modules/browser-pack/_prelude.js","_js/main.js","_js/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","console","log","sticky","bind","pos","eHeight","$e","height","eTop","scrollTop","$","document","body","css","position","animate","top","window","scroll","resize","Mql","_classCallCheck","this","init","afterElement","_resizeListener","_this","on","currentBreakpoint","getPropertyValue","lastBreakpoint","trigger","getComputedStyle"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,eCAAN,GAAA,UAGAW,SAAQC,IAAI,yJC4BL,QAASC,GAAOrB,EAAGC,GACxBA,EAAEqB,KAAK,OAAQ,WAKb,QAASC,KACPC,EAAUC,EAAGC,SACbC,EAAO1B,EAAE2B,YAAY3B,EAAEyB,SAASF,EAAQ,KACpCK,EAAEC,SAASC,MAAML,SAAWzB,EAAEyB,SAChCD,EAAGO,KACDC,SAAU,aACTC,SACDC,IAAKR,IAGPF,EAAGO,KACDC,SAAU,WAfhB,GAAIT,GAAU,EACVG,EAAO,EACPF,EAAKI,EAAE7B,EAkBXuB,KACAM,EAAEO,QAAQC,OAAOd,GAAKe,OAAOf,iTAvBjBF,OAAAA,IA/BHkB,eACX,QAAAA,KAAcC,EAAAC,KAAAF,GACZE,KAAKC,KAAO,WACLD,KAAKE,cAIVF,KAAKG,mBAGPH,KAAKG,gBAAkB,WAAY,GAAAC,GAAAJ,IACjCZ,GAAEO,QAAQU,GAAG,gCAAiC,WAC5CD,EAAKE,kBAAoBF,EAAKF,aAAaK,iBAAiB,WACxDH,EAAKE,oBAAsBF,EAAKI,iBAClCpB,EAAEO,QAAQc,QAAQ,oBAAqBL,EAAKE,mBAC5CF,EAAKI,eAAiBJ,EAAKE,6EAQjCN,KAAKE,eAAeP,OAAOe,kBAAmBf,OAAOe,iBAAiBrB,SAASC,KAAM,UACrFU,KAAKM,kBAAoB,GACzBN,KAAKQ,eAAiB,GACtBR,KAAKC","file":"scripts.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { Mql, sticky } from './utils';\n\n\nconsole.log('in main');\n\n\n\n/*\nconst idsJsModule = (($, ids) => {\n  ids.sticky = (e, t) => { // element[string], target[obj]\n    t.bind('load', () => {\n      let eHeight = 0, \n          eTop = 0, \n          $e = $(e);\n    \n      pos();\n    \n      function pos() {\n        eHeight = $e.height();\n        eTop = (t.scrollTop()+t.height()-eHeight)+'px';\n        if ( ($(document.body).height()) < t.height()) {\n          $e.css({\n            position: \"absolute\"\n          }).animate({\n              top: eTop\n          });\n        } else {\n          $e.css({\n            position: \"static\"\n          });\n        } // end of if else\n      } // end of fn pos\n      \n      $(window).scroll(pos).resize(pos);\n      \n    }); // end of bind\n  } // end of ids.sticky\n  \n  ids.toggleTop = (obj, evt) => {\n    document.getElementById(obj).addEventListener(evt, (e) => {\n      e.preventDefault();\n      $('nav').animate({\n          height: 'toggle'\n        }, 200, () => {\n        ($('nav').is(':visible')) ? $('article').css('display','none') : $('article').css('display','block');\n      }); // end of nav.animate\n    }, false);\n  } // end of ids.nav\n  return ids;\n})(jQuery, idsJsModule || {});\n\n(($, idsJsModule) => {\n  let mql = new Mql();\n  mql.MediaQueryListener();\n\n  $(document).ready(() => {\n    ($(window).width() < 1024) ? $('nav').toggle() : sticky('#footerline',$(window));\n    idsJsModule.toggleTop('btn_mobilenav','click');\n    idsJsModule.toggleTop('btn_mobilenav','touchend');\n  });\n})(jQuery, idsJsModule);\n\nconsole.log(window);\n*/\n","export class Mql {\n  constructor() {\n    this.init = function () {\n      if (!this.afterElement) {\n        // If the browser doesn't support window.getComputedStyle just return\n        return;\n      }\n      this._resizeListener(); // eslint-disable-line no-underscore-dangle\n    };\n\n    this._resizeListener = function () { // eslint-disable-line no-underscore-dangle\n      $(window).on('resize orientationchange load', () => {\n        this.currentBreakpoint = this.afterElement.getPropertyValue('content');\n        if (this.currentBreakpoint !== this.lastBreakpoint) {\n          $(window).trigger('breakpoint-change', this.currentBreakpoint);\n          this.lastBreakpoint = this.currentBreakpoint;\n        }\n      });\n    };\n  }\n  // end of constructor\n\n  MediaQueryListener() {\n    this.afterElement = window.getComputedStyle ? window.getComputedStyle(document.body, ':after') : false;\n    this.currentBreakpoint = '';\n    this.lastBreakpoint = '';\n    this.init();\n  }\n}\n\n// element[string], target[obj]\nexport function sticky(e, t) {\n  t.bind('load', () => {\n    let eHeight = 0;\n    let eTop = 0;\n    let $e = $(e);\n\n    function pos() {\n      eHeight = $e.height();\n      eTop = t.scrollTop()+t.height()-eHeight+'px';\n      if ($(document.body).height() < t.height()) {\n        $e.css({\n          position: 'absolute'\n        }).animate({\n          top: eTop\n        });\n      } else {\n        $e.css({\n          position: 'static'\n        });\n      }\n    }\n\n    pos();\n    $(window).scroll(pos).resize(pos);\n  });\n    // end of bind\n}\n  // end of ids.sticky\n"]}